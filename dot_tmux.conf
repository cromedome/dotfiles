set -g default-command "${SHELL}"

# use ^S rather than ^B for the prefix key
set  -g prefix        ^S
unbind -n ^B

# start window and pane numbering at 1 for easier switching
set -g base-index 1
set -g pane-base-index 1

# bells in any window get sent to the terminal
set  -g bell-action   any
set  -sg escape-time 0
setw -g aggressive-resize on

# on Solaris, set-clipboard leads to core dumps!
set  -g set-clipboard on

# lots of scrollback
set  -g history-limit 10000

# lots of colors
set-option -ga terminal-overrides ',*:Tc'
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# https://unix.stackexchange.com/questions/1045/getting-256-colors-to-work-in-tmux
set -g default-terminal "screen-256color"

# Add truecolor support
set-option -ga terminal-overrides ",xterm-256color:Tc"

# interactive shells attach to bootstrap namespace
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/blob/master/Usage.md#cross-platform-conditional-usage
if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "exec reattach-to-user-namespace -l zsh"'

# Setup Status Bar
set -g status-position top
set -g status-fg white
set -g status-bg colour234
#set -g window-status-activity-attr bold
#set -g pane-border-fg colour245
#set -g pane-active-border-fg colour39
#set -g message-fg colour16
#set -g message-bg colour221
#set -g message-attr bold

# Custom status bar
# Powerline symbols:     
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]'
set -g status-right '#[fg=colour238,bg=colour234,nobold]#[fg=colour245,bg=colour238] #h #[fg=colour252]#[fg=colour235,bg=colour252,bold] #(wemux status_users) '
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour25,bg=colour39,noreverse,bold] #I  #W #[fg=colour39,bg=colour234,nobold]"

setw -g automatic-rename on

bind w command-prompt -p "watch for" "setw monitor-content '%%'"
bind m setw monitor-activity
bind M command-prompt -p "silence (seconds)" "setw monitor-silence %%"

set -g visual-activity on
# set -g visual-content  on
set -g visual-silence  on

# set title options
set-option -g set-titles on
set-option -g set-titles-string '#S'

# use vi keybindings
setw -g mode-keys     vi
set  -g status-keys   vi

# keybindings
bind  a  send-prefix
#bind  A  command-prompt "rename-window %%" # not used; C-a<Comma> is better
bind ^A  last-window
bind '"' choose-window
bind ^C  new-window
bind ^D  detach-client
bind "'" command-prompt "find-window '%%'"

bind ,   command-prompt "rename-window '%%'"
bind R   movew -r
bind /   choose-buffer

bind r source-file ~/.tmux.conf \; display "Reloaded!"

unbind %
bind   |  split-window -h
bind   -  split-window -v

bind  +  choose-tree

bind  *  set synchronize-panes

bind -r n next-window
bind    N next-window -a

# Home/end key support
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# Use vim defaults or arrow keys to navigate spilts
bind -r Left select-pane -L
bind -r Down select-pane -D
bind -r Up select-pane -U
bind -r Right select-pane -R
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind P pipe-pane -o "cat >>~/log/tmux/#W.log" \; display "Toggled logging to ~/log/tmux/#W.log"

# Copy-paste goodness
# Via https://medium.com/free-code-camp/tmux-in-practice-scrollback-buffer-47d5ffa71c93
bind -n M-Up copy-mode

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 2 scroll-down
set -g mouse on

# Do not copy selection and cancel copy mode on drag end event
# Prefer iTerm style selection: select, then mouse click to copy to buffer
unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
    send-keys -X copy-pipe "pbcopy" \;\
    send-keys -X clear-selection

bind p paste-buffer
bind C-p choose-buffer

# OLD copy/paste
#bind-key Escape copy-mode
#bind-key v paste-buffer

#bind-key -T copy-mode-vi 'v' send -X begin-selection;
#bind-key -T copy-mode-vi 'V' send -X select-line;
#bind-key -T copy-mode-vi 'r' send -X rectangle-toggle;
#bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel;
#bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy';
#bind-key -T copy-mode-vi C-WheelUpPane send -X halfpage-up;
#bind-key -T copy-mode-vi C-WheelDownPane send -X halfpage-down

#set -g mouse on
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M
#bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'arcticicestudio/nord-tmux'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Attempt to auto-install TMUX plugin manager
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

